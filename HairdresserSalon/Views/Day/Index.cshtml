@model PaginatedList<DayModel>
@{
    ViewData["Title"] = "Dostępne terminy";

}
@if (TempData["Error"] != null)
{
    <div class="row">
        <div class="col-lg">
            <div class="rounded pg-3 alert-danger">
                @TempData["Error"].ToString()
            </div>
        </div>
    </div>
}
<div id="PlaceHolder"></div>
<h1>Dostępne terminy</h1>
<table class="table table-striped">
    <tr>
        @foreach (var day in Model)
        {

            <th>
                <div>
                    @Html.DisplayFor(modelItem => day.Date.DayOfWeek)
                    @Html.DisplayFor(modelItem => day.Date)
                    @Html.DisplayFor(modelItem => day.Hairdresser.Name)
                </div>

            </th>

        <tr>

            @foreach (var hour in day.Hours)
            {
                <td>
                    @*@Html.ActionLink(hour.Hour.ToString(),"Index", "TimeTable", new { id = hour.Id }, null)*@
                    <button class="btn" onclick="location.href='@Url.Action("Create","Visit", new {id = hour.Id})'">
                        @Html.DisplayFor(modelItem => hour.Hour)
                    </button>
                </td>

            }

        </tr>
    }
        </tr>
    </table>

    @{
        var prevDisabled = !Model.PreviousPage ? "disabled" : "";
        var nextDisabled = !Model.NextPage ? "disabled" : "";
    }
<center>
    <a asp-action="Index"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       class="btn btn-default bg-light @prevDisabled">
        Poprzednia
    </a>
    <a asp-action="Index"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       class="btn btn-default bg-light @nextDisabled">
        Następna
    </a>
</center>
    